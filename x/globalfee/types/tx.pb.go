// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: publicawesome/stargaze/globalfee/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgSetCodeAuthorization is the request for setting code fee.
type MsgSetCodeAuthorization struct {
	Sender            string             `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	CodeAuthorization *CodeAuthorization `protobuf:"bytes,2,opt,name=code_authorization,json=codeAuthorization,proto3" json:"code_authorization,omitempty"`
}

func (m *MsgSetCodeAuthorization) Reset()         { *m = MsgSetCodeAuthorization{} }
func (m *MsgSetCodeAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgSetCodeAuthorization) ProtoMessage()    {}
func (*MsgSetCodeAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{0}
}
func (m *MsgSetCodeAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCodeAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCodeAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCodeAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCodeAuthorization.Merge(m, src)
}
func (m *MsgSetCodeAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCodeAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCodeAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCodeAuthorization proto.InternalMessageInfo

func (m *MsgSetCodeAuthorization) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgSetCodeAuthorization) GetCodeAuthorization() *CodeAuthorization {
	if m != nil {
		return m.CodeAuthorization
	}
	return nil
}

// MsgSetCodeAuthorizationResponse is the response for executing a set code authorization.
type MsgSetCodeAuthorizationResponse struct {
}

func (m *MsgSetCodeAuthorizationResponse) Reset()         { *m = MsgSetCodeAuthorizationResponse{} }
func (m *MsgSetCodeAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCodeAuthorizationResponse) ProtoMessage()    {}
func (*MsgSetCodeAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{1}
}
func (m *MsgSetCodeAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCodeAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCodeAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCodeAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCodeAuthorizationResponse.Merge(m, src)
}
func (m *MsgSetCodeAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCodeAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCodeAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCodeAuthorizationResponse proto.InternalMessageInfo

// MsgRemoveCodeAuthorization is the request for removing code authorization.
type MsgRemoveCodeAuthorization struct {
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	CodeID uint64 `protobuf:"varint,2,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
}

func (m *MsgRemoveCodeAuthorization) Reset()         { *m = MsgRemoveCodeAuthorization{} }
func (m *MsgRemoveCodeAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCodeAuthorization) ProtoMessage()    {}
func (*MsgRemoveCodeAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{2}
}
func (m *MsgRemoveCodeAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCodeAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCodeAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCodeAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCodeAuthorization.Merge(m, src)
}
func (m *MsgRemoveCodeAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCodeAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCodeAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCodeAuthorization proto.InternalMessageInfo

func (m *MsgRemoveCodeAuthorization) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveCodeAuthorization) GetCodeID() uint64 {
	if m != nil {
		return m.CodeID
	}
	return 0
}

// MsgRemoveCodeAuthorizationResponse is the response for executing remove authorization.
type MsgRemoveCodeAuthorizationResponse struct {
}

func (m *MsgRemoveCodeAuthorizationResponse) Reset()         { *m = MsgRemoveCodeAuthorizationResponse{} }
func (m *MsgRemoveCodeAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCodeAuthorizationResponse) ProtoMessage()    {}
func (*MsgRemoveCodeAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{3}
}
func (m *MsgRemoveCodeAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCodeAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCodeAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCodeAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCodeAuthorizationResponse.Merge(m, src)
}
func (m *MsgRemoveCodeAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCodeAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCodeAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCodeAuthorizationResponse proto.InternalMessageInfo

// MsgSetContractAuthorization is the request for executing set contract authorization.
type MsgSetContractAuthorization struct {
	Sender                string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ContractAuthorization *ContractAuthorization `protobuf:"bytes,2,opt,name=contract_authorization,json=contractAuthorization,proto3" json:"contract_authorization,omitempty"`
}

func (m *MsgSetContractAuthorization) Reset()         { *m = MsgSetContractAuthorization{} }
func (m *MsgSetContractAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgSetContractAuthorization) ProtoMessage()    {}
func (*MsgSetContractAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{4}
}
func (m *MsgSetContractAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContractAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContractAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContractAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContractAuthorization.Merge(m, src)
}
func (m *MsgSetContractAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContractAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContractAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContractAuthorization proto.InternalMessageInfo

func (m *MsgSetContractAuthorization) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgSetContractAuthorization) GetContractAuthorization() *ContractAuthorization {
	if m != nil {
		return m.ContractAuthorization
	}
	return nil
}

// MsgSetContractAuthorizationResponse is the response for executing contract authorization.
type MsgSetContractAuthorizationResponse struct {
}

func (m *MsgSetContractAuthorizationResponse) Reset()         { *m = MsgSetContractAuthorizationResponse{} }
func (m *MsgSetContractAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetContractAuthorizationResponse) ProtoMessage()    {}
func (*MsgSetContractAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{5}
}
func (m *MsgSetContractAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContractAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContractAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContractAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContractAuthorizationResponse.Merge(m, src)
}
func (m *MsgSetContractAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContractAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContractAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContractAuthorizationResponse proto.InternalMessageInfo

// MsgRemoveContractAuthorization is the request for removing contract authorization.
type MsgRemoveContractAuthorization struct {
	Sender          string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (m *MsgRemoveContractAuthorization) Reset()         { *m = MsgRemoveContractAuthorization{} }
func (m *MsgRemoveContractAuthorization) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveContractAuthorization) ProtoMessage()    {}
func (*MsgRemoveContractAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{6}
}
func (m *MsgRemoveContractAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContractAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContractAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContractAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContractAuthorization.Merge(m, src)
}
func (m *MsgRemoveContractAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContractAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContractAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContractAuthorization proto.InternalMessageInfo

func (m *MsgRemoveContractAuthorization) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveContractAuthorization) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

// MsgRemoveContractAuthorizationResponse is the response for executing a contract authorization removal.
type MsgRemoveContractAuthorizationResponse struct {
}

func (m *MsgRemoveContractAuthorizationResponse) Reset() {
	*m = MsgRemoveContractAuthorizationResponse{}
}
func (m *MsgRemoveContractAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveContractAuthorizationResponse) ProtoMessage()    {}
func (*MsgRemoveContractAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{7}
}
func (m *MsgRemoveContractAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContractAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContractAuthorizationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContractAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContractAuthorizationResponse.Merge(m, src)
}
func (m *MsgRemoveContractAuthorizationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContractAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContractAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContractAuthorizationResponse proto.InternalMessageInfo

// MsgUpdateParams is the request for updating module's params.
type MsgUpdateParams struct {
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{8}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse is the response for execution a module's params update.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e10c19bbdb4807, []int{9}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetCodeAuthorization)(nil), "publicawesome.stargaze.globalfee.v1.MsgSetCodeAuthorization")
	proto.RegisterType((*MsgSetCodeAuthorizationResponse)(nil), "publicawesome.stargaze.globalfee.v1.MsgSetCodeAuthorizationResponse")
	proto.RegisterType((*MsgRemoveCodeAuthorization)(nil), "publicawesome.stargaze.globalfee.v1.MsgRemoveCodeAuthorization")
	proto.RegisterType((*MsgRemoveCodeAuthorizationResponse)(nil), "publicawesome.stargaze.globalfee.v1.MsgRemoveCodeAuthorizationResponse")
	proto.RegisterType((*MsgSetContractAuthorization)(nil), "publicawesome.stargaze.globalfee.v1.MsgSetContractAuthorization")
	proto.RegisterType((*MsgSetContractAuthorizationResponse)(nil), "publicawesome.stargaze.globalfee.v1.MsgSetContractAuthorizationResponse")
	proto.RegisterType((*MsgRemoveContractAuthorization)(nil), "publicawesome.stargaze.globalfee.v1.MsgRemoveContractAuthorization")
	proto.RegisterType((*MsgRemoveContractAuthorizationResponse)(nil), "publicawesome.stargaze.globalfee.v1.MsgRemoveContractAuthorizationResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "publicawesome.stargaze.globalfee.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "publicawesome.stargaze.globalfee.v1.MsgUpdateParamsResponse")
}

func init() {
	proto.RegisterFile("publicawesome/stargaze/globalfee/v1/tx.proto", fileDescriptor_52e10c19bbdb4807)
}

var fileDescriptor_52e10c19bbdb4807 = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xd1, 0x6b, 0xd3, 0x5e,
	0x14, 0xc7, 0x7b, 0x7f, 0x3f, 0x8d, 0xec, 0x4c, 0xd8, 0x0c, 0x73, 0xad, 0x19, 0xa4, 0xb3, 0x55,
	0xa9, 0x73, 0x26, 0x74, 0x13, 0x95, 0x31, 0x50, 0xbb, 0x81, 0x0e, 0x29, 0x48, 0xc4, 0x17, 0x41,
	0xe4, 0x36, 0xb9, 0xbb, 0x0b, 0x34, 0xbd, 0x31, 0xf7, 0xb6, 0x6e, 0x7b, 0x92, 0xfd, 0x05, 0xbe,
	0xf8, 0xe2, 0xab, 0xe8, 0xeb, 0xf6, 0xe2, 0xff, 0xb0, 0xc7, 0x3d, 0xfa, 0x54, 0xa4, 0x7d, 0x18,
	0xf8, 0x57, 0x48, 0xd3, 0x34, 0x6b, 0x5c, 0x52, 0x52, 0xeb, 0x5b, 0x7a, 0x7a, 0xce, 0xf7, 0xfb,
	0xf9, 0x1e, 0x38, 0x5c, 0x58, 0x76, 0x9b, 0xb5, 0xba, 0x6d, 0xe2, 0xf7, 0x84, 0x33, 0x87, 0xe8,
	0x5c, 0x60, 0x8f, 0xe2, 0x7d, 0xa2, 0xd3, 0x3a, 0xab, 0xe1, 0xfa, 0x36, 0x21, 0x7a, 0xab, 0xac,
	0x8b, 0x5d, 0xcd, 0xf5, 0x98, 0x60, 0x72, 0x31, 0xd2, 0xad, 0x0d, 0xba, 0xb5, 0xb0, 0x5b, 0x6b,
	0x95, 0x95, 0xac, 0xc9, 0xb8, 0xc3, 0xb8, 0xee, 0x70, 0xda, 0x1b, 0x76, 0x38, 0xed, 0x4f, 0x2b,
	0x73, 0x94, 0x51, 0xe6, 0x7f, 0xea, 0xbd, 0xaf, 0xa0, 0xba, 0x9a, 0x86, 0xe0, 0xcc, 0xc0, 0x1f,
	0x2a, 0x7c, 0x45, 0x90, 0xad, 0x72, 0xfa, 0x92, 0x88, 0x0d, 0x66, 0x91, 0x27, 0x4d, 0xb1, 0xc3,
	0x3c, 0x7b, 0x1f, 0x0b, 0x9b, 0x35, 0xe4, 0x79, 0x90, 0x38, 0x69, 0x58, 0xc4, 0xcb, 0xa1, 0x45,
	0x54, 0x9a, 0x32, 0x82, 0x5f, 0x32, 0x01, 0xd9, 0x64, 0x16, 0x79, 0x8b, 0x87, 0xbb, 0x73, 0xff,
	0x2d, 0xa2, 0xd2, 0xf4, 0xca, 0x7d, 0x2d, 0x45, 0x32, 0xed, 0x9c, 0x97, 0x71, 0xc5, 0xfc, 0xb3,
	0xb4, 0x36, 0x7d, 0x70, 0x7a, 0xb4, 0x14, 0x78, 0x16, 0xae, 0x43, 0x3e, 0x01, 0xd3, 0x20, 0xdc,
	0x65, 0x0d, 0x4e, 0x0a, 0xdb, 0xa0, 0x54, 0x39, 0x35, 0x88, 0xc3, 0x5a, 0x24, 0x7d, 0x98, 0x22,
	0x5c, 0xf2, 0xc3, 0xd8, 0x96, 0x9f, 0xe0, 0x42, 0x05, 0x3a, 0xed, 0xbc, 0xd4, 0x9b, 0xdf, 0xda,
	0x34, 0xa4, 0xde, 0x5f, 0x5b, 0x56, 0x14, 0xe5, 0x06, 0x14, 0x92, 0x7d, 0x42, 0x9a, 0xef, 0x08,
	0x16, 0x06, 0xc4, 0x0d, 0xe1, 0x61, 0x53, 0xa4, 0xe3, 0x79, 0x07, 0xf3, 0x66, 0x30, 0x10, 0xbb,
	0xe0, 0xb5, 0x94, 0x0b, 0x8e, 0xf1, 0x34, 0xae, 0x9a, 0x71, 0xe5, 0x68, 0xba, 0x9b, 0x50, 0x1c,
	0x81, 0x1d, 0xc6, 0x73, 0x41, 0x1d, 0x5a, 0xc2, 0x38, 0x01, 0x6f, 0xc3, 0xec, 0x59, 0x40, 0xcb,
	0xf2, 0x08, 0xe7, 0x7e, 0xb4, 0x29, 0x63, 0x26, 0xc4, 0xeb, 0x97, 0xa3, 0x60, 0x25, 0xb8, 0x35,
	0xda, 0x31, 0x64, 0xfb, 0x84, 0x60, 0xa6, 0xca, 0xe9, 0x2b, 0xd7, 0xc2, 0x82, 0xbc, 0xc0, 0x1e,
	0x76, 0x78, 0x22, 0xcd, 0x1b, 0x90, 0x5c, 0xbf, 0x23, 0x58, 0xef, 0x9d, 0x54, 0xeb, 0xed, 0x8b,
	0x56, 0x72, 0xc7, 0xed, 0x7c, 0xe6, 0x57, 0x3b, 0x3f, 0xdb, 0x97, 0x58, 0x66, 0x8e, 0x2d, 0x88,
	0xe3, 0x8a, 0x3d, 0x23, 0x10, 0x8d, 0x26, 0xb8, 0xe6, 0x9f, 0xda, 0x30, 0xd6, 0x00, 0x79, 0xe5,
	0x50, 0x82, 0xff, 0xab, 0x9c, 0xca, 0x9f, 0x11, 0xcc, 0xc5, 0xde, 0xe2, 0x7a, 0x2a, 0xae, 0x84,
	0x13, 0x51, 0x36, 0x27, 0x99, 0x1e, 0x40, 0xca, 0x5f, 0x10, 0x64, 0x93, 0xce, 0xeb, 0x51, 0x5a,
	0x87, 0x04, 0x01, 0xe5, 0xe9, 0x84, 0x02, 0x21, 0xe5, 0x37, 0x04, 0xb9, 0xc4, 0xab, 0x7b, 0x3c,
	0xd6, 0x22, 0x62, 0x14, 0x94, 0x67, 0x93, 0x2a, 0x84, 0xa0, 0x87, 0x08, 0x16, 0x46, 0x1d, 0xd0,
	0xc6, 0xb8, 0x1b, 0x89, 0xc3, 0x7d, 0xfe, 0x0f, 0x44, 0x42, 0xe2, 0x03, 0x04, 0x97, 0x23, 0x57,
	0x75, 0x2f, 0xad, 0xfa, 0xf0, 0x94, 0xb2, 0xfe, 0x37, 0x53, 0x03, 0x08, 0xe5, 0xe2, 0x87, 0xd3,
	0xa3, 0x25, 0x54, 0x31, 0x8e, 0x3b, 0x2a, 0x3a, 0xe9, 0xa8, 0xe8, 0x67, 0x47, 0x45, 0x1f, 0xbb,
	0x6a, 0xe6, 0xa4, 0xab, 0x66, 0x7e, 0x74, 0xd5, 0xcc, 0xeb, 0x87, 0xd4, 0x16, 0x3b, 0xcd, 0x9a,
	0x66, 0x32, 0x47, 0xef, 0x1b, 0xdd, 0x3d, 0xf7, 0x26, 0xb6, 0xca, 0x0f, 0xf4, 0xdd, 0xa1, 0x97,
	0x51, 0xec, 0xb9, 0x84, 0xd7, 0x24, 0xff, 0x4d, 0x5c, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x48,
	0xc9, 0xf0, 0x50, 0xcc, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// SetCodeAuthorization will set a specific code id  fee settings.
	SetCodeAuthorization(ctx context.Context, in *MsgSetCodeAuthorization, opts ...grpc.CallOption) (*MsgSetCodeAuthorizationResponse, error)
	// RemoveCodeAuthorization will remove code id configuration.
	RemoveCodeAuthorization(ctx context.Context, in *MsgRemoveCodeAuthorization, opts ...grpc.CallOption) (*MsgRemoveCodeAuthorizationResponse, error)
	// SetContractAuthorization will set a specific contract fee settings.
	SetContractAuthorization(ctx context.Context, in *MsgSetContractAuthorization, opts ...grpc.CallOption) (*MsgSetContractAuthorizationResponse, error)
	// RemoveContractAuthorization removes specific contract fee settings.
	RemoveContractAuthorization(ctx context.Context, in *MsgRemoveContractAuthorization, opts ...grpc.CallOption) (*MsgRemoveContractAuthorizationResponse, error)
	// UpdateParams will update module params, callable by governance only.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetCodeAuthorization(ctx context.Context, in *MsgSetCodeAuthorization, opts ...grpc.CallOption) (*MsgSetCodeAuthorizationResponse, error) {
	out := new(MsgSetCodeAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/publicawesome.stargaze.globalfee.v1.Msg/SetCodeAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveCodeAuthorization(ctx context.Context, in *MsgRemoveCodeAuthorization, opts ...grpc.CallOption) (*MsgRemoveCodeAuthorizationResponse, error) {
	out := new(MsgRemoveCodeAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/publicawesome.stargaze.globalfee.v1.Msg/RemoveCodeAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetContractAuthorization(ctx context.Context, in *MsgSetContractAuthorization, opts ...grpc.CallOption) (*MsgSetContractAuthorizationResponse, error) {
	out := new(MsgSetContractAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/publicawesome.stargaze.globalfee.v1.Msg/SetContractAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveContractAuthorization(ctx context.Context, in *MsgRemoveContractAuthorization, opts ...grpc.CallOption) (*MsgRemoveContractAuthorizationResponse, error) {
	out := new(MsgRemoveContractAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/publicawesome.stargaze.globalfee.v1.Msg/RemoveContractAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/publicawesome.stargaze.globalfee.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SetCodeAuthorization will set a specific code id  fee settings.
	SetCodeAuthorization(context.Context, *MsgSetCodeAuthorization) (*MsgSetCodeAuthorizationResponse, error)
	// RemoveCodeAuthorization will remove code id configuration.
	RemoveCodeAuthorization(context.Context, *MsgRemoveCodeAuthorization) (*MsgRemoveCodeAuthorizationResponse, error)
	// SetContractAuthorization will set a specific contract fee settings.
	SetContractAuthorization(context.Context, *MsgSetContractAuthorization) (*MsgSetContractAuthorizationResponse, error)
	// RemoveContractAuthorization removes specific contract fee settings.
	RemoveContractAuthorization(context.Context, *MsgRemoveContractAuthorization) (*MsgRemoveContractAuthorizationResponse, error)
	// UpdateParams will update module params, callable by governance only.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetCodeAuthorization(ctx context.Context, req *MsgSetCodeAuthorization) (*MsgSetCodeAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCodeAuthorization not implemented")
}
func (*UnimplementedMsgServer) RemoveCodeAuthorization(ctx context.Context, req *MsgRemoveCodeAuthorization) (*MsgRemoveCodeAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCodeAuthorization not implemented")
}
func (*UnimplementedMsgServer) SetContractAuthorization(ctx context.Context, req *MsgSetContractAuthorization) (*MsgSetContractAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetContractAuthorization not implemented")
}
func (*UnimplementedMsgServer) RemoveContractAuthorization(ctx context.Context, req *MsgRemoveContractAuthorization) (*MsgRemoveContractAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContractAuthorization not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetCodeAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCodeAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCodeAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publicawesome.stargaze.globalfee.v1.Msg/SetCodeAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCodeAuthorization(ctx, req.(*MsgSetCodeAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveCodeAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveCodeAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveCodeAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publicawesome.stargaze.globalfee.v1.Msg/RemoveCodeAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveCodeAuthorization(ctx, req.(*MsgRemoveCodeAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetContractAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetContractAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetContractAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publicawesome.stargaze.globalfee.v1.Msg/SetContractAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetContractAuthorization(ctx, req.(*MsgSetContractAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveContractAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveContractAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveContractAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publicawesome.stargaze.globalfee.v1.Msg/RemoveContractAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveContractAuthorization(ctx, req.(*MsgRemoveContractAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publicawesome.stargaze.globalfee.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "publicawesome.stargaze.globalfee.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetCodeAuthorization",
			Handler:    _Msg_SetCodeAuthorization_Handler,
		},
		{
			MethodName: "RemoveCodeAuthorization",
			Handler:    _Msg_RemoveCodeAuthorization_Handler,
		},
		{
			MethodName: "SetContractAuthorization",
			Handler:    _Msg_SetContractAuthorization_Handler,
		},
		{
			MethodName: "RemoveContractAuthorization",
			Handler:    _Msg_RemoveContractAuthorization_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "publicawesome/stargaze/globalfee/v1/tx.proto",
}

func (m *MsgSetCodeAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCodeAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCodeAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CodeAuthorization != nil {
		{
			size, err := m.CodeAuthorization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCodeAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCodeAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCodeAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCodeAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCodeAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCodeAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CodeID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CodeID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCodeAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCodeAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCodeAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetContractAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContractAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContractAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ContractAuthorization != nil {
		{
			size, err := m.ContractAuthorization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetContractAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContractAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContractAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContractAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContractAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContractAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractAddress) > 0 {
		i -= len(m.ContractAddress)
		copy(dAtA[i:], m.ContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContractAuthorizationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContractAuthorizationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContractAuthorizationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetCodeAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CodeAuthorization != nil {
		l = m.CodeAuthorization.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetCodeAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveCodeAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CodeID != 0 {
		n += 1 + sovTx(uint64(m.CodeID))
	}
	return n
}

func (m *MsgRemoveCodeAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetContractAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ContractAuthorization != nil {
		l = m.ContractAuthorization.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetContractAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveContractAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveContractAuthorizationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetCodeAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCodeAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCodeAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeAuthorization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CodeAuthorization == nil {
				m.CodeAuthorization = &CodeAuthorization{}
			}
			if err := m.CodeAuthorization.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCodeAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCodeAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCodeAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCodeAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCodeAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCodeAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeID", wireType)
			}
			m.CodeID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CodeID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCodeAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCodeAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCodeAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContractAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContractAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContractAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAuthorization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContractAuthorization == nil {
				m.ContractAuthorization = &ContractAuthorization{}
			}
			if err := m.ContractAuthorization.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContractAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContractAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContractAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContractAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContractAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContractAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContractAuthorizationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContractAuthorizationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContractAuthorizationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
