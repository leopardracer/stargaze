syntax = "proto3";
package osmosis.tokenfactory.v1beta1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/public-awesome/stargaze/v16/x/tokenfactory/types";

// DenomAuthorityMetadata specifies metadata for addresses that have specific
// capabilities over a token factory denom. Right now there is only one Admin
// permission, but is planned to be extended to the future.
message DenomAuthorityMetadata {
  option (gogoproto.equal) = true;

  // Can be empty for no admin, or a valid stargaze address
  string admin = 1 [(gogoproto.moretags) = "yaml:\"admin\""];
}

// Params defines the parameters for the tokenfactory module.
message Params {
  // DenomCreationFee defines the fee to be charged on the creation of a new
  // denom. The fee is drawn from the MsgCreateDenom's sender account, and
  // transferred to the community pool.
  repeated cosmos.base.v1beta1.Coin denom_creation_fee = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"denom_creation_fee\"",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins"
  ];

  // DenomCreationGasConsume defines the gas cost for creating a new denom.
  // This is intended as a spam deterrence mechanism.
  //
  // See: https://github.com/CosmWasm/token-factory/issues/11
  uint64 denom_creation_gas_consume = 2 [
    (gogoproto.moretags) = "yaml:\"denom_creation_gas_consume\"",
    (gogoproto.nullable) = true
  ];
}
